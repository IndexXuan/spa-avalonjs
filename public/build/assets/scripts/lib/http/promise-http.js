"use strict";function $http(url){var core={ajax:function(method,url,args){var promise=new Promise(function(resolve,reject){var client=new XMLHttpRequest,uri=url;if(args&&"POST"===method||"PUT"===method){uri+="?";for(var key in args)args.hasOwnProperty(key)&&(argcount++&&(uri+="&"),uri+=encodeURIComponent(key)+"="+encodeURIComponent(args[key]))}client.open(method,url),client.send(),client.onload=function(){200===this.status?resolve(this.response):reject(this.statusText)},client.onerror=function(){reject(this.statusText)}});return promise}};return{get:function(args){return core.ajax("GET",url,args)},post:function(args){return core.ajax("POST",url,args)},put:function(args){return core.ajax("PUT",url,args)},"delete":function(args){return core.ajax("DELETE",url,args)}}}var mdnAPI="https://developer.mozilla.org/en-US/search.json",payload={topic:"js",q:"Promise"},callback={success:function(data){console.log(1,"success",JSON.parse(data))},error:function(data){console.log(2,"error",JSON.parse(data))}};$http(mdnAPI).get(payload).then(callback.success)["catch"](callback.error),$http(mdnAPI).get(payload).then(callback.success,callback.error),$http(mdnAPI).get(payload).then(callback.success).then(void 0,callback.error);
//# sourceMappingURL=promise-http.js.map