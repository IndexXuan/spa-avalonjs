@charset "utf-8";
@import "classes";

/**
 * @class widget
 */

/**
 * 构造列表的自定义使用方法
 -----------------------
 * 使用方法，详见 [Demo](http://doyoe.github.io/Yo/demo/widget/yo-slidermenu.html)
 * @method yo-slidermenu
 * @param {default | String} $name 扩展的名称
 * @param {default | Length} $action-width 定义action宽度
 * @param {default | Color} $action-bgcolor 定义action背景色
 */

@mixin yo-slidermenu(
    $name: default,
    $action-width: default,
    $action-bgcolor: default) {
    // 区别是否新增实例还是修改本身
    @if $name == default {
        $name: "";
    } @else {
        $name: "-#{$name}";
    }
    // 如果值为default，则取config的定义
    @if $action-width == default {
        $action-width: map-get($slidermenu, action-width);
    }
    @if $action-bgcolor == default {
        $action-bgcolor: map-get($slidermenu, action-bgcolor);
    }
    .yo-slidermenu#{$name} {
        > .action {
            @if $action-width != map-get($slidermenu, action-width) {
                width: $action-width;
            }
            @if $action-bgcolor != map-get($slidermenu, action-bgcolor) {
                background-color: $action-bgcolor;
            }
        }
        // 增量扩展
        @content;
    }
}

// 调用本文件时载入slidermenu基础构造
.yo-slidermenu {
    @include _slidermenu;
}